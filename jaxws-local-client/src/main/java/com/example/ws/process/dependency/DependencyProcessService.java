
package com.example.ws.process.dependency;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "DependencyProcessService", targetNamespace = "http://process.ws.example.com")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DependencyProcessService {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws ProcessException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addressedService", targetNamespace = "http://process.ws.example.com", className = "com.example.ws.process.dependency.AddressedService")
    @ResponseWrapper(localName = "addressedServiceResponse", targetNamespace = "http://process.ws.example.com", className = "com.example.ws.process.dependency.AddressedServiceResponse")
    @Action(input = "http://process.ws.example.com/Input", output = "http://process.ws.example.com/Output", fault = {
        @FaultAction(className = ProcessException_Exception.class, value = "ProcessException")
    })
    public String addressedService(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws ProcessException_Exception
    ;

}
