
package com.example.ws.process;

import java.util.concurrent.Future;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "LongProcessPortType", targetNamespace = "http://process.ws.example.com")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface LongProcessServicePort {


    /**
     * 
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<com.example.ws.process.RunResponse>
     */
    @WebMethod(operationName = "run")
    @RequestWrapper(localName = "run", targetNamespace = "http://process.ws.example.com", className = "com.example.ws.process.Run")
    @ResponseWrapper(localName = "runResponse", targetNamespace = "http://process.ws.example.com", className = "com.example.ws.process.RunResponse")
    public Response<RunResponse> runProcessAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "run")
    @RequestWrapper(localName = "run", targetNamespace = "http://process.ws.example.com", className = "com.example.ws.process.Run")
    @ResponseWrapper(localName = "runResponse", targetNamespace = "http://process.ws.example.com", className = "com.example.ws.process.RunResponse")
    public Future<?> runProcessAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<RunResponse> asyncHandler);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws ProcessException_Exception
     */
    @WebMethod(operationName = "run")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "run", targetNamespace = "http://process.ws.example.com", className = "com.example.ws.process.Run")
    @ResponseWrapper(localName = "runResponse", targetNamespace = "http://process.ws.example.com", className = "com.example.ws.process.RunResponse")
    @Action(input = "http://process.ws.example.com/LongProcessPortType/runRequest", output = "http://process.ws.example.com/LongProcessPortType/runResponse", fault = {
        @FaultAction(className = ProcessException_Exception.class, value = "http://process.ws.example.com/LongProcessPortType/run/Fault/ProcessException")
    })
    public String runProcess(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws ProcessException_Exception
    ;

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "runLong", targetNamespace = "http://process.ws.example.com", className = "com.example.ws.process.RunLong")
    @Action(input = "http://process.ws.example.com/LongProcessPortType/runLong")
    public void runLong(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
